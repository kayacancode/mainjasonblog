name: Weekly Music Update
on:
  schedule:
    - cron: '0 9 * * 5'  # Every Friday at 9 AM UTC (3 AM CST/4 AM CDT Chicago, 4 AM EST/5 AM EDT Eastern, 1 AM PST/2 AM PDT California)
  workflow_dispatch:  # Allow manual triggering

jobs:
  update-music:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y xvfb
        # Install Chrome using the official method
        wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
        echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" | sudo tee /etc/apt/sources.list.d/google-chrome.list
        sudo apt-get update
        sudo apt-get install -y google-chrome-stable
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install spotipy python-dotenv supabase requests selenium webdriver-manager pillow
        # Install additional dependencies that might be needed
        pip install typing-extensions
        
    - name: Set up Chrome environment
      run: |
        echo "CHROME_HEADLESS=true" >> $GITHUB_ENV
        echo "DISPLAY=:99" >> $GITHUB_ENV
        echo "CHROME_BIN=/usr/bin/google-chrome-stable" >> $GITHUB_ENV
        
    - name: Start virtual display
      run: |
        Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &
        
    - name: Run music scraper
      env:
        GITHUB_ACTIONS: true
        SPOTIFY_CLIENT_ID: ${{ secrets.SPOTIFY_CLIENT_ID }}
        SPOTIFY_CLIENT_SECRET: ${{ secrets.SPOTIFY_CLIENT_SECRET }}
        SPOTIFY_REDIRECT_URI: ${{ secrets.SPOTIFY_REDIRECT_URI }}
        NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
        SUPABASE_SERVICE_KEY: ${{ secrets.SUPABASE_SERVICE_KEY }}
        SPOTIPY_CLIENT_ID: ${{ secrets.SPOTIFY_CLIENT_ID }}
        SPOTIPY_CLIENT_SECRET: ${{ secrets.SPOTIFY_CLIENT_SECRET }}
        SPOTIPY_REDIRECT_URI: ${{ secrets.SPOTIFY_REDIRECT_URI }}
        SENDGRID_API_KEY: ${{ secrets.SENDGRID_API_KEY }}
        CLIENT_EMAIL_ADDRESS: ${{ secrets.CLIENT_EMAIL_ADDRESS }}
        DASHBOARD_URL: ${{ secrets.DASHBOARD_URL }}
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      run: |
        cd pages/api/spotify_api
        # Debug: Check if environment variables are set
        echo "🔍 Debug - Environment variables in shell:"
        echo "SPOTIFY_CLIENT_ID: ${SPOTIFY_CLIENT_ID:0:10}..."
        echo "NEXT_PUBLIC_SUPABASE_URL: ${NEXT_PUBLIC_SUPABASE_URL:0:30}..."
        echo "SUPABASE_SERVICE_KEY: ${SUPABASE_SERVICE_KEY:0:10}..."
        echo "SPOTIPY_CLIENT_ID: ${SPOTIPY_CLIENT_ID:0:10}..."
        echo "SPOTIPY_CLIENT_SECRET: ${SPOTIPY_CLIENT_SECRET:0:10}..."
        # Ensure Python can find local modules
        export PYTHONPATH="${PYTHONPATH}:$(pwd)"
        # Explicitly export environment variables to ensure they're available to Python
        export SPOTIFY_CLIENT_ID="$SPOTIFY_CLIENT_ID"
        export SPOTIFY_CLIENT_SECRET="$SPOTIFY_CLIENT_SECRET"
        export SPOTIFY_REDIRECT_URI="$SPOTIFY_REDIRECT_URI"
        export NEXT_PUBLIC_SUPABASE_URL="$NEXT_PUBLIC_SUPABASE_URL"
        export SUPABASE_SERVICE_KEY="$SUPABASE_SERVICE_KEY"
        export SPOTIPY_CLIENT_ID="$SPOTIPY_CLIENT_ID"
        export SPOTIPY_CLIENT_SECRET="$SPOTIPY_CLIENT_SECRET"
        export SPOTIPY_REDIRECT_URI="$SPOTIPY_REDIRECT_URI"
        # Run the scraper (environment variables are now explicitly passed)
        python py_scraper.py
        
    - name: Commit and push changes
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add .
        git diff --quiet && git diff --staged --quiet || git commit -m "🤖 Automated music update - $(date +'%Y-%m-%d')"
        git push
        
    - name: Create summary
      if: success()
      run: |
        echo "## 🎵 Weekly Music Update Complete" >> $GITHUB_STEP_SUMMARY
        echo "**Date:** $(date)" >> $GITHUB_STEP_SUMMARY
        echo "**Status:** ✅ Successfully updated music tracks" >> $GITHUB_STEP_SUMMARY
        echo "**Next Run:** Next Friday at:" >> $GITHUB_STEP_SUMMARY
        echo "- 9:00 AM UTC" >> $GITHUB_STEP_SUMMARY
        echo "- 3:00 AM CST / 4:00 AM CDT (Chicago)" >> $GITHUB_STEP_SUMMARY
        echo "- 4:00 AM EST / 5:00 AM EDT (Eastern)" >> $GITHUB_STEP_SUMMARY
        echo "- 1:00 AM PST / 2:00 AM PDT (California)" >> $GITHUB_STEP_SUMMARY
        
    - name: Create failure summary
      if: failure()
      run: |
        echo "## ❌ Weekly Music Update Failed" >> $GITHUB_STEP_SUMMARY
        echo "**Date:** $(date)" >> $GITHUB_STEP_SUMMARY
        echo "**Status:** ❌ Failed to update music tracks" >> $GITHUB_STEP_SUMMARY
        echo "**Action Required:** Check the logs above for errors and fix any issues" >> $GITHUB_STEP_SUMMARY
