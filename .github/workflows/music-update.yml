name: Weekly Music Update
on:
  schedule:
    - cron: '0 14 * * 5'  # Every Friday at 2 PM UTC (10 AM EST, 7 AM PST, 6 PM CET)
  workflow_dispatch:  # Allow manual triggering

jobs:
  update-music:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: Install Chrome
      run: |
        wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | apt-key add -
        echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google-chrome.list
        apt-get update
        apt-get install -y google-chrome-stable xvfb
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install spotipy python-dotenv supabase requests selenium webdriver-manager pillow
        # Install additional dependencies that might be needed
        pip install typing-extensions
        
    - name: Set up environment variables
      env:
        SPOTIFY_CLIENT_ID: ${{ secrets.SPOTIFY_CLIENT_ID }}
        SPOTIFY_CLIENT_SECRET: ${{ secrets.SPOTIFY_CLIENT_SECRET }}
        SPOTIFY_REDIRECT_URI: ${{ secrets.SPOTIFY_REDIRECT_URI }}
        NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
        SUPABASE_SERVICE_KEY: ${{ secrets.SUPABASE_SERVICE_KEY }}
      run: |
        echo "SPOTIFY_CLIENT_ID=$SPOTIFY_CLIENT_ID" >> $GITHUB_ENV
        echo "SPOTIFY_CLIENT_SECRET=$SPOTIFY_CLIENT_SECRET" >> $GITHUB_ENV
        echo "SPOTIFY_REDIRECT_URI=$SPOTIFY_REDIRECT_URI" >> $GITHUB_ENV
        echo "NEXT_PUBLIC_SUPABASE_URL=$NEXT_PUBLIC_SUPABASE_URL" >> $GITHUB_ENV
        echo "SUPABASE_SERVICE_KEY=$SUPABASE_SERVICE_KEY" >> $GITHUB_ENV
        echo "CHROME_HEADLESS=true" >> $GITHUB_ENV
        echo "DISPLAY=:99" >> $GITHUB_ENV
        
    - name: Start virtual display
      run: |
        Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &
        
    - name: Run music scraper
      run: |
        cd pages/api/spotify_api
        # Create a simple .env file for the script
        echo "SPOTIFY_CLIENT_ID=$SPOTIFY_CLIENT_ID" > .env
        echo "SPOTIFY_CLIENT_SECRET=$SPOTIFY_CLIENT_SECRET" >> .env
        echo "SPOTIFY_REDIRECT_URI=$SPOTIFY_REDIRECT_URI" >> .env
        echo "NEXT_PUBLIC_SUPABASE_URL=$NEXT_PUBLIC_SUPABASE_URL" >> .env
        echo "SUPABASE_SERVICE_KEY=$SUPABASE_SERVICE_KEY" >> .env
        # Ensure Python can find local modules
        export PYTHONPATH="${PYTHONPATH}:$(pwd)"
        # Run the scraper
        python py_scraper.py
        
    - name: Commit and push changes
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add .
        git diff --quiet && git diff --staged --quiet || git commit -m "🤖 Automated music update - $(date +'%Y-%m-%d')"
        git push
        
    - name: Create summary
      if: success()
      run: |
        echo "## 🎵 Weekly Music Update Complete" >> $GITHUB_STEP_SUMMARY
        echo "**Date:** $(date)" >> $GITHUB_STEP_SUMMARY
        echo "**Status:** ✅ Successfully updated music tracks" >> $GITHUB_STEP_SUMMARY
        echo "**Next Run:** Next Friday at:" >> $GITHUB_STEP_SUMMARY
        echo "- 2:00 PM UTC" >> $GITHUB_STEP_SUMMARY
        echo "- 10:00 AM EST (Eastern)" >> $GITHUB_STEP_SUMMARY
        echo "- 7:00 AM PST (Pacific)" >> $GITHUB_STEP_SUMMARY
        echo "- 6:00 PM CET (Central Europe)" >> $GITHUB_STEP_SUMMARY
        
    - name: Create failure summary
      if: failure()
      run: |
        echo "## ❌ Weekly Music Update Failed" >> $GITHUB_STEP_SUMMARY
        echo "**Date:** $(date)" >> $GITHUB_STEP_SUMMARY
        echo "**Status:** ❌ Failed to update music tracks" >> $GITHUB_STEP_SUMMARY
        echo "**Action Required:** Check the logs above for errors and fix any issues" >> $GITHUB_STEP_SUMMARY
